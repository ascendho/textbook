MemoryStatement {
  Statement = Allocation | Assignment
  Allocation = identifier "=>" Value
  Assignment = identifier Label? "=" Value

  Value = Object | Array | Pointer | ArrayString | StringLiteral | literal
  
  Object = identifier? "{" ListOf<Pair, ","> "}"
  Pair = identifier ":" Value

  Array = "[" ListOf<Value, ","> "]"
  
  Pointer = "&" Location
  Location = identifier (LocationMemberAccess | LocationSubscript)*
  LocationMemberAccess = "." identifier
  LocationSubscript = "[" number "]"
  
  ArrayString = "b" string
  StringLiteral = string

  string = "\"" char* "\""
  char = nonEscape | escape
  nonEscape = ~("\\" | "\"") any
  escape = "\\" any

  literal = (~("{" | "}" | "[" | "]" | ",") any)+
  
  identifier = (alnum | "_" )+
  Label = "(" string ")"
  
  number = "-"? (zero | nonzero)
  zero = "0"
  nonzero = "1".."9" digit*

  /* 
   * Directives, e.g. #style, #label
   */
  Directive = LabelDirective | StyleDirective | LinkDirective
    
  LabelDirective = "#label" ("stack" | "heap") string
    
  StyleDirective = "#style" MultiLocation Style
  Style 
    = cssClass+ --css
    | json      --json

  LinkDirective = "#link" MultiLocation json
    
  MultiLocation = identifier (LocationMemberAccess | LocationSubscript | LocationSlice)*
  LocationSlice = "[" number? ":" number? (":" number?)? "]"
    
  cssClass = (alnum | "_" | "-")+
  json = "{" (any)+ end
}