MemoryDiagram {
  /*
   * Diagram structure
   */
   
   Diagram 
    = SubDiagram+ --multi
    | Lines       --single
   SubDiagram = identifier "{" Lines "}"
   Lines = Line*
   Line = Statement | Directive | FrameHeader
   FrameHeader = identifier ":"

  /* 
   * Statements: assignments and allocations
   */
  Statement = (Allocation | Assignment)
  Allocation = identifier "=>" Value
  Assignment = identifier Label? "=" Value
  Label = "(" string ")"

  Value = Object | Array | Pointer | ArrayString | StringLiteral | literal
  
  Object = identifier? "{" ListOf<Pair, ","> "}"
  Pair = identifier ":" Value

  Array = "[" ListOf<Value, ","> "]"
  
  Pointer = "&" Location
  Location = identifier (LocationMemberAccess | LocationSubscript)*
  LocationMemberAccess = "." identifier
  LocationSubscript = "[" int "]"
  
  ArrayString = "b" string
  StringLiteral = string
  literal = (~("{" | "}" | "[" | "]" | "," | "\n") any)+

  /* 
   * Directives, e.g. #style, #label
   */
  Directive = LabelDirective | StyleDirective
    
  LabelDirective = "#label" ("stack" | "heap" | "title" | "subtitle") string
    
  StyleDirective = "#style" (AllStyle | LinkStyle | LabelStyle | ValueStyle)
  AllStyle = MultiLocation (CSSClasses | JsonObject)
  LinkStyle = "link:" MultiLocation JsonObject
  LabelStyle = "label:" MultiLocation (CSSClasses | JsonObject)
  ValueStyle = "value:" MultiLocation (CSSClasses | JsonObject)
  
  MultiLocation = identifier (LocationMemberAccess | LocationSubscript | LocationSlice)*
  LocationSlice = "[" int? ":" int? (":" int?)? "]"
    
  CSSClasses = cssClass+
  cssClass = (alnum | "_" | "-")+
  
  /*
   * Utilities and simple JSON parser
   */ 
   
  identifier = (alnum | "_" )+
  
  string = "\"" char* "\""
  char = nonEscape | escape
  nonEscape = ~("\\" | "\"") any
  escape = "\\" any
  
  number = float | int
  int = "-"? digit+
  float = "-"? digit* "." digit+
  
  JsonValue = JsonObject | JsonArray | string | number
  JsonObject = "{" ListOf<JsonPair, ","> "}"
  JsonArray = "[" ListOf<JsonValue, ","> "]"
  JsonPair = (identifier | string) ":" JsonValue
}